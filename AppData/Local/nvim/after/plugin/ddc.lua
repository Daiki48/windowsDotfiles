-- vim.cmd([[
--   call ddc#custom#patch_global('ui', 'native')
--
--   augroup gh_ddc
--     au!
--     au User gh_open_issue call EnableAutoCompletionForGh('gh_issues')
--     au User gh_open_issue_assignees call EnableAutoCompletionForGh('gh_issues_assginees')
--   augroup END
--
--   function! EnableAutoCompletionForGh(kind) abort
--     call ddc#custom#patch_buffer('sources', [a:kind])
--
--     call ddc#custom#patch_buffer('specialBufferCompletion', v:true)
--
--     " If you want to complements with japanese, you should add keywordPattern
--     call ddc#custom#patch_buffer({'keywordPattern':
--           \ "[a-zA-Z0-9_À-ÿ\u30a0-\u30ff\u3040-\u309f\u3005-\u3006\u30e0-\u9fcf]*"})
--     let option = {}
--     if a:kind ==# 'gh_issues'
--       let option = {
--             \ 'gh_issues': {
--               \  'matcherKey': 'menu',
--               \  'minAutoCompleteLength': 1,
--               \ }}
--     elseif a:kind ==# 'gh_issues_assginees'
--       let option = {
--             \ 'gh_issues_assginees': {
--               \  'minAutoCompleteLength': 1,
--               \ }}
--     endif
--
--     call ddc#custom#patch_buffer('sourceOptions', option)
--   endfunction
--
--   inoremap <silent><expr> <TAB>
--   \ pumvisible() ? '<C-n>' :
--   \ (col('.') <= 1 <Bar><Bar> getline('.')[col('.') - 2] =~# '\s') ?
--   \ '<TAB>' : ddc#map#manual_complete()
--   "call ddc#enable()
-- ]])
